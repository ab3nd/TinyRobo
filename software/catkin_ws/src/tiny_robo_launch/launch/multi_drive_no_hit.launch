<launch>

  <!--
  Before launching this, you need to start the camera with 

  sudo modprobe v4l2loopback devices=2

  and then 

  gst-launch-1.0 v4l2src device=/dev/video0 ! "image/jpeg,width=1024,height=768" ! tee name=f ! queue ! v4l2sink device=/dev/video1 f. ! queue ! v4l2sink device=/dev/video2
  -->

  <arg name="cam_name" value="overhead_cam" />
  <arg name="GST10" value="true" />

  <!-- Start the GSCAM node -->
  <!-- Note that some settings of videocrop will cause a double-free error -->
  <!-- ! videocrop top=200 left=10 right=30 bottom=20 -->
  <env name="GSCAM_CONFIG" value="v4l2src device=/dev/video1 ! ffmpegcolorspace " />
  <node pkg="gscam" type="gscam" name="$(arg cam_name)">
          <param name="camera_name" value="$(arg cam_name)" />
          <param name="camera_info_url" value="file:///$(find camera_cal)/usb_cam_1024x768.yml" />
          <remap from="camera/image_raw" to="$(arg cam_name)/image_raw" />
  </node>

   <!-- Video un-distorting -->
   <node name="image_proc" pkg="image_proc" type="image_proc" ns="$(arg cam_name)"/>

   <!-- Fiducial tags -->
   <include file="$(find tiny_robo_launch)/launch/april_tags.launch" />

   <!-- Distance oracle -->
   <node pkg="distance_oracle" type="distance_oracle_server.py" name="fake_range_service" output="screen"/>

   <!-- Bearing oracle -->
   <node pkg="bearing_oracle" type="bearing_oracle_server.py" name="fake_bearing_service" output="screen"/>

   <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="1.220 0.637 1.4 0 1 0 0 world_base camera_frame 50" />

   <!-- client for bearing service -->
   <node pkg="range_and_bearing" type="range_and_bearing_sensor.py" name="rab_sensor_test_1" output="screen">
      <param name="robot_id" value="1" type="int"/>
   </node>

   <!-- client for bearing service -->
   <node pkg="range_and_bearing" type="range_and_bearing_sensor.py" name="rab_sensor_test_0" output="screen">
      <param name="robot_id" value="0" type="int"/>
   </node>

      <!-- client for bearing service -->
   <node pkg="range_and_bearing" type="range_and_bearing_sensor.py" name="rab_sensor_test_3" output="screen">
      <param name="robot_id" value="3" type="int"/>
   </node>

</launch>