<launch>
  <!-- Set this to your camera's name -->
  <arg name="cam_name" value="overhead_cam" />
  <arg name="GST10" value="true" />

  <!-- Start the GSCAM node -->
  <env name="GSCAM_CONFIG" value="v4l2src device=/dev/video1 ! videocrop top=160 left=10 right=30 bottom=20 ! ffmpegcolorspace " />
  <node pkg="gscam" type="gscam" name="$(arg cam_name)" output="screen">
    <param name="camera_name" value="$(arg cam_name)" />
    <param name="camera_info_url" value="file:///$(find camera_cal)/usb_cam_cropped.yml" />
    <remap from="camera/image_raw" to="$(arg cam_name)/image_raw" />
  </node>

  <!-- Provide rectification -->
  <node pkg="image_proc" type="image_proc" name="overhead_image_proc"
        ns="$(arg cam_name)" />

  <!-- View the raw and rectified output -->
  <node pkg="image_view" type="image_view" name="overhead_view" >
    <remap from="image" to="/$(arg cam_name)/image_raw" />
  </node>
    
  <node pkg="image_view" type="image_view" name="overhead_view_rect" >
    <remap from="image" to="/$(arg cam_name)/image_rect_color" />
  </node> 

  <!-- April tags -->
  <include file="$(find tiny_robo_launch)/launch/april_tags.launch" />

  <!-- Fake laser readings --> 
  <node pkg="laser_oracle" type="laser_oracle_server.py" name="fake_laser_service" output="screen"/>

  <!-- Distance oracle -->
  <node pkg="distance_oracle" type="distance_oracle_server.py" name="fake_range_service" output="screen"/>

  <!-- Network service -->
  <node pkg="network_service" type="network_server.py" name="fake_net_service" output="screen">
    <param name="txRange" value="2" type="double"/>
  </node>

  <!-- client for the laser ranges -->
  <node pkg="laser_oracle" type="laser_client.py" name="laser_client" output="screen">
    <param name="robot_id" value="7" type="int"/>
  </node>
   
  <!-- client for the laser ranges -->
  <node pkg="laser_oracle" type="laser_client.py" name="laser_client_6" output="screen">
    <param name="robot_id" value="23" type="int"/>
    <param name="angleMin" type="double" value="-1.745"/>
  <param name="angleMax" type="double" value="1.745"/>
  <param name="angleIncrement" type="double" value="0.1745"/>
  <param name="rangeMin" type="double" value="0.1"/>
  <param name="rangeMax" type="double" value="0.8"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="1.220 0.637 1.4 0 1 0 0 world_base $(arg cam_name) 50" />
  
</launch>