
<launch>
	<!-- Launch Argos simulator and GCPR runners for Argos robots-->
	<node name="argos_ros_launcher" pkg="user_interface" type="ui_sim_launch.sh"/>

	<!-- Simulated camera watching the Argos simulated world -->
	<node name="sim_cam" pkg="user_interface" type="synthetic_world_cam.py" output="screen">
		<param name="camera_info_url" value="$(find camera_cal)/usb_cam_1024x768.yml" />
	</node>

	<!-- Fiducial tags -->
	<include file="$(find tiny_robo_launch)/launch/april_tags.launch" />

	<!-- Fake laser readings --> 
	<node pkg="laser_oracle" type="laser_oracle_server.py" name="fake_laser_service" output="screen"/>

	<!-- Distance oracle -->
	<node pkg="distance_oracle" type="distance_oracle_server.py" name="fake_range_service" output="screen"/>

	<!-- Bearing oracle -->
	<node pkg="bearing_oracle" type="bearing_oracle_server.py" name="fake_bearing_service" output="screen"/>

	<!-- Camera position in the world -->
	<!-- node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="1.220 0.637 1.4 0 1 0 0 world_base camera_frame 50" / -->

	<!-- Attempt to clean up skips in contact -->
	<node name="destutter" pkg="user_interface" type="destutter.py" output="screen" required="true"/>

	<!-- Launch the user interface -->
	<node name="ui" pkg="user_interface" type="real_ui_input_layer.py" required="true" output="screen">
		<param name="overhead_cam" value="/overhead_cam/image" />
	</node>
	
	<!-- Checker for box selection gestures -->
	<node name="box_detector" pkg="user_interface" type="box_select_detector.py" required="true" output="screen" />

	<!-- Lasso selection gestures -->
	<node name="lasso_detector" pkg="user_interface" type="lasso_select_detector.py" required="true" output="screen" />

	<!-- Tap selection gestures -->
	<node name="tap_detector" pkg="user_interface" type="tap_select_detector.py" required="true" output="screen" />

	<!-- Tap waypoint gestures -->
	<node name="waypoint_detector" pkg="user_interface" type="tap_waypoint_detector.py" required="true" output="screen" />

	<!-- Paths that are not selections -->
	<node name="path_detector" pkg="user_interface" type="path_detector.py" required="true" output="screen" />

	<!-- Debug node that dumps everything to pictures -->
	<!-- node name="dbg_vis" pkg="user_interface" type="gesture_debugger.py" required="true" output="screen" / -->
	
	<!-- Converts pixel locations to meter locations -->
	<node name="point_translator" pkg="robot_drivers" type="point_mapper_svc.py" output="screen"/>


	<node name="compiler" pkg="compiler" type="gcpr_gen_node.py" required="true" output="screen"/>

</launch>