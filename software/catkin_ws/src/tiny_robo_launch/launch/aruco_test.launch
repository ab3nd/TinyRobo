<!-- Run the aruco_detect node -->
<launch>
  <!-- namespace for camera input -->
  <arg name="image" default="image_rect_color"/>
  <arg name="transport" default="compressed"/>
  <arg name="fiducial_len" default="0.05"/>


  <arg name="cam_name" value="overhead_cam" />
  <arg name="GST10" value="true" />

  <!-- Start the GSCAM node -->
  <!-- Note that some settings of videocrop will cause a double-free error -->
  <env name="GSCAM_CONFIG" value="v4l2src device=/dev/video1 ! videocrop top=160 left=10 right=30 bottom=20 ! ffmpegcolorspace " />
  <node pkg="gscam" type="gscam" name="$(arg cam_name)">
          <param name="camera_name" value="$(arg cam_name)" />
          <param name="camera_info_url" value="file:///$(find camera_cal)/usb_cam_cropped.yml" />
          <remap from="camera/image_raw" to="$(arg cam_name)/image_raw" />
  </node>

  <!-- Provide rectification -->
  <node pkg="image_proc" type="image_proc" name="overhead_image_proc" ns="$(arg cam_name)" />

  <node pkg="aruco_detect" name="aruco_detect"
    type="aruco_detect" output="screen" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="16"/>
    <remap from="/camera/compressed" 
        to="$(arg cam_name)/$(arg image)/$(arg transport)"/>
    <remap from="/camera_info" to="$(arg cam_name)/camera_info"/>
  </node>
</launch>
