
<launch>
	<arg name="cam_name" value="overhead_cam" />
	<arg name="GST10" value="true" />

	<!-- Start the GSCAM node -->
	<!-- Note that some settings of videocrop will cause a double-free error -->
	<!-- ! videocrop top=200 left=10 right=30 bottom=20 -->
	<env name="GSCAM_CONFIG" value="v4l2src device=/dev/video1 ! ffmpegcolorspace " />
	<node pkg="gscam" type="gscam" name="$(arg cam_name)">
	      <param name="camera_name" value="$(arg cam_name)" />
	      <param name="camera_info_url" value="file:///$(find camera_cal)/usb_cam_1024x768.yml" />
	      <remap from="camera/image_raw" to="$(arg cam_name)/image_raw" />
	</node>

	<!-- Video un-distorting -->
	<node name="image_proc" pkg="image_proc" type="image_proc" ns="$(arg cam_name)"/>

	<!-- Fiducial tags -->
	<include file="$(find tiny_robo_launch)/launch/april_tags.launch" />

	<!-- Fake laser readings --> 
	<node pkg="laser_oracle" type="laser_oracle_server.py" name="fake_laser_service" output="screen"/>

	<!-- Distance oracle -->
	<node pkg="distance_oracle" type="distance_oracle_server.py" name="fake_range_service" output="screen"/>

	<!-- Bearing oracle -->
	<node pkg="bearing_oracle" type="bearing_oracle_server.py" name="fake_bearing_service" output="screen"/>

	<!-- Camera position in the world -->
	<node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="1.220 0.637 1.4 0 1 0 0 world_base camera_frame 50" />

	<!-- Attempt to clean up skips in contact -->
	<node name="destutter" pkg="user_interface" type="destutter.py" output="screen" required="true"/>

	<!-- Launch the user interface -->
	<node name="ui" pkg="user_interface" type="real_ui_input_layer.py" required="true" output="screen"/>
	
	<!-- Checker for box selection gestures -->
	<node name="box_detector" pkg="user_interface" type="box_select_detector.py" required="true" output="screen" />

	<!-- node name="point_translator" pkg="robot_drivers" type="point_mapper.py" output="screen"/ -->

</launch>