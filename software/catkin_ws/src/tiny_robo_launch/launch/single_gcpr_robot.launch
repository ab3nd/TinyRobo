<launch>

  <arg name="cam_name" value="overhead_cam" />
  <arg name="GST10" value="true" />

  <!-- Start the GSCAM node -->
  <!-- Note that some settings of videocrop will cause a double-free error -->
  <!-- ! videocrop top=200 left=10 right=30 bottom=20 -->
  <env name="GSCAM_CONFIG" value="v4l2src device=/dev/video1 ! ffmpegcolorspace " />
  <node pkg="gscam" type="gscam" name="$(arg cam_name)">
          <param name="camera_name" value="$(arg cam_name)" />
          <param name="camera_info_url" value="file:///$(find camera_cal)/usb_cam_1024x768.yml" />
          <remap from="camera/image_raw" to="$(arg cam_name)/image_raw" />
  </node>

   <!-- Video un-distorting -->
   <node name="image_proc" pkg="image_proc" type="image_proc" ns="$(arg cam_name)"/>

   <!-- Fiducial tags -->
   <include file="$(find tiny_robo_launch)/launch/april_tags.launch" />

   <!-- Fake laser readings --> 
   <node pkg="laser_oracle" type="laser_oracle_server.py" name="fake_laser_service" output="screen" />

   <!-- Distance oracle -->
   <node pkg="distance_oracle" type="distance_oracle_server.py" name="fake_range_service" output="screen"/>

   <!-- Network service -->
   <node pkg="network_service" type="network_server.py" name="fake_net_service" output="screen">
      <param name="txRange" value="2" type="double"/>
   </node>

   <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="1.220 0.637 1.4 0 1 0 0 world_base camera_frame 50" />

  <!-- Set up for robot 0, the green tank -->
  <arg name="robot_id" value="0" />
  <arg name="robot_ip_addr" value="192.168.1.176"/>

   <!-- client for the laser ranges -->
   <node pkg="laser_oracle" type="laser_client.py" name="laser_client" output="screen"> 
   <!-- Can add launch-prefix="python -m cProfile -s time" for profiling -->
   	<param name="robot_id" value="$(arg robot_id)" type="int"/>
      <param name="angleMin" type="double" value="-3"/>
      <param name="angleMax" type="double" value="3"/>
      <param name="angleIncrement" type="double" value="0.16"/>
      <param name="rangeMin" type="double" value="0.03"/>
      <param name="rangeMax" type="double" value="0.8"/>
      <param name="scanRate" type="double" value="20"/>
   </node>

  <node pkg="gcpr_runner" type="gcpr_driver.py" name="gcpr" output="screen">
    <param name="robot_id" value="$(arg robot_id)"/>
  </node>

  <node pkg="motor_translation" type="differential_node" name="diff_drive_$(arg robot_id)" output="screen">
    <param name="/driver_name" value="/gcpr_drive_$(arg robot_id)" type="str" />
  </node>

  <node pkg="motor_limit" type="motor_limit.py" name="motor_control_node" output="screen">
    <remap from="/default_driver/drive_cmd" to="/diff_drive_$(arg robot_id)/drive_cmd"/>
    <param name="robot_addr" value="$(arg robot_ip_addr)" type="str" />
  </node>
</launch>